exit
voter.votes
voter.reload
voter.candidates
voter.candidate
Vote.all
voter.votes
voter
self
continue
next
voter.votes
self
exit
voter.votes
voter
continue
exit
voter.votes.first.errors
voter.votes.first
voter.votes
voter.cast_vote_for(candidate)
candidate.votes
candidate
vote.voter.votes
vote.voter
vote
exit
Date.today > (birthdate + 18.years)
(birthdate + 18.years)
Date.today > (birthdate.year + 18.years)
Date.today > birthdate.year + 18.years
birthdate + 18.years
birthdate
Date.today
x
exit
birthdate + 18.years < Date.today
birthdate + 18.years < Time.now
birthdate + 18.years
18.years.class
18.years
birthdate
x=Date.today.year - self.birthdate.year
x=Date.today.year
x.class
x=Date.today - self.birthdate
Date.today - self.birthdate
Date.today
Date
Date.now
self.birthdate.class
Time.now.class
Time.now - self.birthdate
Time.now
self.birthdate
exit
voter.votes
voter
candidate2
vote.candidate
candidate1
voter
vote.voter
voter.vote
vote
exit
Vote.last.voter.votes
Vote.last
Vote.last.voter.cast_vote_for(c2)
c2 = create :candidate, position_running_for: Vote.last.candidate.position_running_for
c2 = create :candidate, position_running_for: _
Vote.last.voter.votes.first.candidate.position_running_for
Vote.last.voter.votes.first.candidate
Vote.last == Vote.last.voter.votes.first
self
Vote.last.voter.votes
Vote.last.voter
Vote.last
v = Vote.all.last
v = Vote.last
create :vote
vote.voter.votes
vote.voter
create :vote
voter.votes
voter.cast_vote_for(candidate2)
voter.cast_vote_for(c2)
candidate2
candidate1
voter
vote
exit
candidate.votes.count
candidate.votes
candidate
exit
voter
exit
vote.properties
vote.methods - voter.methods
voter = FactoryGirl.build :voter
(vote.methods - [].methods).size
vote.methods - [].methods.size
vote.methods.size
vote.methods - [].methods
vote.methods
vote
exit
x
exit
x.size
x
exit
exir
exit
evaluator.methods
voter
evaluator
exit
next
bext
vote
next
vote
exit
v = Voter.all.last
FactoryGirl.create(:voter)
v = create(:voter)
v = create :voter
v = create voter
v = _
create :voter
exit
v.cast_vote_for(c)
c.save
c = create :candidate
c.save
v.save
v.errors
v.cast_vote_for(build :candidate)
v= build :voter
build(:candidate)
FactoryGirl.build(:candidate)
exit
Faker::Name.title
FactoryGirl.create :candidate
FactoryGirl.build :candidate
exit
voter.errors
voter.save
voter.votes
voter.cast_vote_for(Candidate.new)
exit
Time.now.year - birthdate.year
birthdate
is_18?
exit
v.errors
v.valid?
v=FactoryGirl::build(:voter, birthdate:Faker::Date.between(1.years.ago, 2.years.ago))
v = _
FactoryGirl::build(:voter, birthdate:Faker::Date.between(1.years.ago, 2.years.ago))
voter
FactoryGirl::build(:voter)
build(:voter)
Faker::Date.between(17.years.ago, 6.years.ago)
Faker::Date
Faker::Name.name
birthdate: Faker::Date.between(17.years.ago, 6.years.ago)
birthdate.year
exit
Time.now.year - birthdate.year
continue
Time.now.year - birthdate.year
continue
Time.now.year - birthdate.year
next
Time.now.year - birthdate.year
self
exit
Time.now.year - birthdate.year
self.birthdate.year
self
exit
next
self.voter.votes.count
self.voter.votes.cout
self.voter.votes
self.voter
self
